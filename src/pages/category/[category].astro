---
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';

// Utiliza Astro.glob para leer todos los archivos Markdown de posts en src/content/posts
const allPosts = await Astro.glob('../../content/posts/*.md');

// Filtra las categorías, asegurando que cada post tiene una categoría válida
const uniqueCategories = [
  ...new Set(
    allPosts
      .filter(post => post.frontmatter.category) // Filtra solo los posts con una categoría definida
      .map(post => post.frontmatter.category)
  ),
];

// Esta función se ejecuta en el proceso de compilación para generar rutas dinámicas
export async function getStaticPaths() {
  return uniqueCategories.map(category => {
    return {
      params: { category: category.toLowerCase() }, // Utiliza la categoría como parámetro de la URL
      props: { category },  // Pasa la categoría como prop a la página
    };
  });
}

// Filtra los posts por categoría específica, asegurando que exista la categoría
const { category } = Astro.props;

// Verificamos si la categoría está definida antes de usar toLowerCase
const filteredPosts = allPosts.filter(post => 
  post.frontmatter.category && post.frontmatter.category.toLowerCase() === category?.toLowerCase()
);
---

<!-- Contenido de la página -->
<Layout title={`Posts de ${category ? category : 'Categoría Desconocida'} - Blog de Permacultura`}>
  <h1>Posts de {category ? category : 'Categoría Desconocida'}</h1>
  
  <section class="category-posts">
    {filteredPosts.length > 0 ? (
      filteredPosts.map(post => (
        <PostCard
          title={post.frontmatter.title}
          date={post.frontmatter.date}
          slug={post.url ?? ''} 
          excerpt={post.frontmatter.excerpt}
          image={post.frontmatter.image}
          category={post.frontmatter.category}
        />
      ))
    ) : (
      <p>No hay posts disponibles en esta categoría.</p>
    )}
  </section>
</Layout>

<style>
  h1 {
    font-size: 2.5rem;
    color: var(--color-primary);
    margin-bottom: 2rem;
  }

  .category-posts {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }
  }
</style>
