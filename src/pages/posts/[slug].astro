---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { marked } from 'marked'; // Importamos 'marked' para procesar el Markdown
import Category from '../../components/Categorias.astro';// Obtener todos los posts
const posts = await getCollection('posts');

// Obtener el post actual basándonos en el slug de la ruta
const { slug } = Astro.params;
const post = posts.find((p) => p.slug === slug);

if (!post) {
  throw new Error('Post no encontrado');
}

// Procesar el contenido del post Markdown a HTML
const postContent = marked(post.body);
---

<Layout title={post.data.title}>
  <article class="post-article">
    <h1 class="post-title">{post.data.title}</h1>
    <p class="post-date"><em>{new Date(post.data.date).toLocaleDateString()}</em></p>
    <p class="post-category">{post.data.category}</p>
    <img class="post-image" src={post.data.image} alt={post.data.title} />
    
    <!-- Renderizar el contenido del post con HTML generado -->
    <div class="post-content" set:html={postContent}></div>
  </article>
  <Category category={post.data.category} />
</Layout>

<style is:global>
/* Estilos del post */
.post-article {
    max-width: 800px;
    margin: 2rem auto;
    padding: 1rem;
    background-color: var(--color-background);
    box-shadow: 6px 6px 0px #000;
    border: 4px solid #000;
    overflow: hidden; /* Evitar que el contenido desborde */
}

.post-title {
    font-size: 2.5rem;
    margin: 0 0 1rem;
    font-weight: bold;
    color: var(--color-primary);
}
.post-content p {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--color-primary);
}
.post-date {
    font-size: 1rem;
    color: var(--color-text-dark);
    margin-bottom: 1rem;
    border-bottom: 2px solid #000;
    padding-bottom: 0.5rem;
}

.post-category {
    font-size: 1rem;
    color: var(--color-primary);
    font-weight: bold;
    text-transform: uppercase;
}

/* Asegurando que las imágenes se ajusten correctamente */
.post-image {
    width: 100%; /* Ocupa todo el ancho del contenedor */
    max-width: 100%; /* No puede ser más ancho que su contenedor */
    height: auto; /* Mantiene la proporción */
    margin: 1.5rem 0;
    border: 2px solid #000;
    box-shadow: 6px 6px 0px #000;
}

.post-content {
    font-size: 1.1rem;
    line-height: 1.8;
    color: var(--color-text-dark);
}

.post-content p {
    margin-bottom: 1.5rem;
    border-left: 4px solid #000;
    padding-left: 1rem;
}

/* Estilos responsivos para móviles */
@media (max-width: 768px) {
    .post-article {
        margin: 1rem;
        padding: 1rem;
    }

    .post-title {
        font-size: 2rem;
    }

    .post-image {
        width: 100%;
        height: auto;
    }

    .post-content {
        font-size: 1rem;
    }
}


</style>